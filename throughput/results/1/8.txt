BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'EGYPT' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'MIDDLE EAST'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'PROMO BURNISHED STEEL'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1733092.10..1733093.92 rows=729 width=38) (actual time=8039.734..8039.735 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1709166 read=281338 written=2
   ->  HashAggregate  (cost=1733044.67..1733057.43 rows=729 width=38) (actual time=8039.681..8039.683 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1709163 read=281338 written=2
         ->  Hash Join  (cost=39453.82..1732556.71 rows=24398 width=38) (actual time=930.306..8002.893 rows=24054 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1709163 read=281338 written=2
               ->  Nested Loop  (cost=39452.25..1732097.69 rows=24398 width=16) (actual time=930.240..7973.701 rows=24054 loops=1)
                     Buffers: shared hit=1709159 read=281338 written=2
                     ->  Hash Join  (cost=39451.96..1724219.23 rows=24417 width=16) (actual time=930.211..7828.264 rows=24054 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1636838 read=281338 written=2
                           ->  Nested Loop  (cost=421.27..1684486.56 rows=122085 width=20) (actual time=6.509..6795.515 rows=120360 loops=1)
                                 Buffers: shared hit=1526787 read=245234
                                 ->  Nested Loop  (cost=420.84..1487008.34 rows=403309 width=16) (actual time=6.178..3730.150 rows=395568 loops=1)
                                       Buffers: shared hit=234509 read=229043
                                       ->  Bitmap Heap Scan on part  (cost=416.12..28180.29 rows=13380 width=4) (actual time=6.100..79.056 rows=13188 loops=1)
                                             Recheck Cond: ((p_type)::text = 'PROMO BURNISHED STEEL'::text)
                                             Heap Blocks: exact=11313
                                             Buffers: shared hit=8081 read=3314
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..412.78 rows=13380 width=0) (actual time=4.081..4.081 rows=13188 loops=1)
                                                   Index Cond: ((p_type)::text = 'PROMO BURNISHED STEEL'::text)
                                                   Buffers: shared read=82
                                       ->  Bitmap Heap Scan on lineitem  (cost=4.72..108.72 rows=31 width=20) (actual time=0.034..0.267 rows=30 loops=13188)
                                             Recheck Cond: (l_partkey = part.p_partkey)
                                             Heap Blocks: exact=397395
                                             Buffers: shared hit=226428 read=225729
                                             ->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_l_shipmode_idx  (cost=0.00..4.71 rows=31 width=0) (actual time=0.022..0.022 rows=30 loops=13188)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Buffers: shared hit=38649 read=16113
                                 ->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.007..0.007 rows=0 loops=395568)
                                       Index Cond: ((o_orderkey = lineitem.l_orderkey) AND (o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Buffers: shared hit=1292278 read=16191
                           ->  Hash  (cost=35280.69..35280.69 rows=300000 width=4) (actual time=918.891..918.891 rows=299838 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14638kB
                                 Buffers: shared hit=110051 read=36104 written=2
                                 ->  Nested Loop  (cost=906.18..35280.69 rows=300000 width=4) (actual time=19.078..801.300 rows=299838 loops=1)
                                       Buffers: shared hit=110051 read=36104 written=2
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.045..0.104 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.006..0.020 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                         Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=905.11..6455.64 rows=60000 width=8) (actual time=16.897..150.110 rows=59968 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Heap Blocks: exact=145317
                                             Buffers: shared hit=110049 read=36104 written=2
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.11 rows=60000 width=0) (actual time=11.065..11.065 rows=59968 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=5 read=831
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=24054)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=72321
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.025..0.025 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.013 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 6.957 ms
 Execution time: 8040.580 ms
(70 rows)

COMMIT;
COMMIT
